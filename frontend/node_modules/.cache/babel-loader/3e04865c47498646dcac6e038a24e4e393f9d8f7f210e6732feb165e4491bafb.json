{"ast":null,"code":"var _jsxFileName = \"/home/yashmalviya/Desktop/payment/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PaymentForm from \"./components/paymentForm\";\nimport PaymentModal from \"./components/paymentModal\";\nimport PaymentConfirmation from \"./components/paymentConfirmation\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [merchantName, setMerchantName] = useState(\"\");\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n  const [googlePayType, setGooglePayType] = useState(\"phone\");\n  const [modal, showModal] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [paymentStatus, setPaymentStatus] = useState(\"\");\n  const [paymentComplete, setPaymentComplete] = useState(false);\n  const handlePaymentChange = method => {\n    setPaymentMethod(method);\n  };\n  const handleGooglePayTypeChange = type => {\n    setGooglePayType(type);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    showModal(true);\n  };\n  const closeModal = () => {\n    showModal(false);\n    setPaymentStatus(\"\");\n  };\n  const handleConfirmPayment = () => {\n    setPaymentStatus(\"processing\");\n    setTimeout(() => {\n      setPaymentStatus(\"confirmed\");\n      setTimeout(() => {\n        setPaymentComplete(true);\n        showModal(false);\n      }, 1500);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: paymentComplete ? /*#__PURE__*/_jsxDEV(PaymentConfirmation, {\n      amount: amount,\n      paymentMethod: paymentMethod\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PaymentForm, {\n        paymentMethod: paymentMethod,\n        googlePayType: googlePayType,\n        handlePaymentChange: handlePaymentChange,\n        handleGooglePayTypeChange: handleGooglePayTypeChange,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PaymentModal, {\n        show: modal,\n        merchantName: merchantName,\n        setMerchantName: setMerchantName,\n        amount: amount,\n        paymentStatus: paymentStatus,\n        setAmount: setAmount,\n        handleConfirmPayment: handleConfirmPayment,\n        closeModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TtA1afoD0mmOXhYuAu81Gk/u0Fw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PaymentForm","PaymentModal","PaymentConfirmation","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","merchantName","setMerchantName","paymentMethod","setPaymentMethod","googlePayType","setGooglePayType","modal","showModal","amount","setAmount","paymentStatus","setPaymentStatus","paymentComplete","setPaymentComplete","handlePaymentChange","method","handleGooglePayTypeChange","type","handleSubmit","e","preventDefault","closeModal","handleConfirmPayment","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","show","_c","$RefreshReg$"],"sources":["/home/yashmalviya/Desktop/payment/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PaymentForm from \"./components/paymentForm\";\nimport PaymentModal from \"./components/paymentModal\";\nimport PaymentConfirmation from \"./components/paymentConfirmation\";\nimport \"./styles.css\";\n\nfunction App() {\n  const [merchantName, setMerchantName] = useState(\"\");\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n  const [googlePayType, setGooglePayType] = useState(\"phone\");\n  const [modal, showModal] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [paymentStatus, setPaymentStatus] = useState(\"\");\n  const [paymentComplete, setPaymentComplete] = useState(false);\n\n  const handlePaymentChange = (method) => {\n    setPaymentMethod(method);\n  };\n\n  const handleGooglePayTypeChange = (type) => {\n    setGooglePayType(type);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    showModal(true);\n  };\n\n  const closeModal = () => {\n    showModal(false);\n    setPaymentStatus(\"\");\n  };\n\n  const handleConfirmPayment = () => {\n    setPaymentStatus(\"processing\");\n    setTimeout(() => {\n      setPaymentStatus(\"confirmed\");\n      setTimeout(() => {\n        setPaymentComplete(true);\n        showModal(false);\n      }, 1500);\n    }, 2000);\n  };\n\n  return (\n    <div className=\"app-container\">\n      {paymentComplete ? (\n        <PaymentConfirmation amount={amount} paymentMethod={paymentMethod} />\n      ) : (\n        <>\n          <PaymentForm\n            paymentMethod={paymentMethod}\n            googlePayType={googlePayType}\n            handlePaymentChange={handlePaymentChange}\n            handleGooglePayTypeChange={handleGooglePayTypeChange}\n            handleSubmit={handleSubmit}\n          />\n          <PaymentModal\n            show={modal}  \n            merchantName={merchantName}\n            setMerchantName={setMerchantName}\n            amount={amount}\n            paymentStatus={paymentStatus}\n            setAmount={setAmount}\n            handleConfirmPayment={handleConfirmPayment}\n            closeModal={closeModal}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}